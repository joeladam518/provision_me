#!/usr/bin/env bash

# Variables
CWD="$(pwd)"
script_dir="$(cd "$(dirname "$0")" >/dev/null 2>&1 && pwd -P)" 
repos_dir="${HOME}/repos"
system="$1"

# check if the system argument was given
if [ -z "$system" ] || ([ "$system" != "desktop" ] && [ "$system" != "mac" ] && [ "$system" != "server" ]); then
    cmsg -nr "Must specify a type of system. "
    cmsg -a  "Valid types: {desktop|mac|server}"
    exit 1
fi

# Add the current script dir to path if it's not there
if [[ ! "$PATH" =~ (^|:)"$script_dir"(:|$) ]]; then
    export PATH="${PATH}:${script_dir}"
fi

# Create the repos dir if it doesn't exist
if [ ! -d "$repos_dir" ]; then
    mkdir -p "$repos_dir"
fi

# Set the rcfile variable (bcause mac is different from linux)
if [ "$system" == "mac" ]; then
    rcfile=".bash_profile"
else
    rcfile=".bashrc"
fi

# Clone or update the dotefiles repo
if [ -d "${repos_dir}/dotfiles" ]; then
    cd "${repos_dir}/dotfiles" && git pull
else
    cd "$repos_dir" && git clone "https://github.com/joeladam518/dotfiles.git"

    # Confirm cloning went ok
    if [ ! -d "${repos_dir}/dotfiles" ]; then
        cmsg -r "Failed to clone the dotfiles repo"
        exit 1
    fi
fi

# Symlink the bash rc files
if [ -L "${HOME}/${rcfile}" ] && [ -f "${HOME}/${rcfile}.old" ]; then
    cmsg -y "The dotfiles .bashrc symlink already exists"
elif [ -f "${HOME}/${rcfile}" ]; then
    cd "$HOME" && mv "$rcfile" "${rcfile}.old"
    cd "$HOME" && ln -s "${repos_dir}/dotfiles/bashrc/${system}/${rcfile}"
fi

# Symlink the vimrc files
if [ -L "${HOME}/.vimrc" ] && ([ -L "${HOME}/.vim" ] && [ -d "${HOME}/.vim" ]); then
    cmsg -y "The dotfiles .vimrc symlinks already exist"
else
    cd "$HOME" && ln -s "${repos_dir}/dotfiles/vimrc/.vim"
    cd "$HOME" && ln -s "${repos_dir}/dotfiles/vimrc/.vimrc"
fi

cd "$CWD"
